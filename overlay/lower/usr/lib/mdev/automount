#!/bin/sh

destdir=/mnt
run="${destdir}/${MDEV}/run.sh"
run_once="${destdir}/${MDEV}/runonce.sh"
run_once_flag="${runonce/.sh/.done}"

log() {
	logger -s -t automount -p daemon.info "$1"
}

cleanup() {
	if [ -d "${destdir}/${MDEV}" ]; then
		if rmdir "${destdir}/${MDEV}" 2>&1; then
			log "Removed ${destdir}/${MDEV} mountpoint."
		else
			log "Failed to remove ${destdir}/${MDEV} mountpoint."
		fi
	fi
}

do_fsck() {
	if fsck -a "/dev/${MDEV}" 2>&1 | logger -t automount -p daemon.warning; then
		log "fsck check succeeded on /dev/${MDEV}"
	else
		log "fsck check failed on /dev/${MDEV}. Mounting process aborted."
		return 1
	fi
}

do_mount() {
	if ! mkdir -p "${destdir}/${MDEV}" 2>&1; then
		log "Cannot create ${destdir}/${MDEV} mountpoint."
		return 1
	fi

	do_fsck || return 1

	if ! mount -t auto -o sync "/dev/${MDEV}" "${destdir}/${MDEV}" 2>&1; then
		log "Failed to mount /dev/${MDEV} at ${destdir}/${MDEV} mountpoint."
		cleanup
		return 1
	fi

	log "Mounted /dev/${MDEV} at ${destdir}/${MDEV} mountpoint."

	[ -f "$run_once" ] && do_run_once
	[ -f "$run" ] && do_run_always
}

do_umount() {
	if grep -qs "^/dev/${MDEV} " /proc/mounts; then
		if umount "${destdir}/${MDEV}" 2>&1; then
			log "Unmounted ${destdir}/${MDEV} mountpoint."
		else
			log "Failed to unmount ${destdir}/${MDEV} mountpoint."
		fi
	else
		log "/dev/${MDEV} is not mounted."
	fi

	cleanup
}

do_run_always() {
	if sh $run 2>&1; then
		log "Executed $run script."
	else
		log "Failed to execute $run script."
	fi
}

do_run_once() {
	if [ -f "$run_once_flag" ]; then
		log "Stop flag $run_once_flag exists."
		return 1
	fi

	if sh $run_once 2>&1; then
		touch $run_once_flag
		log "Executed $run_once script."
	else
		log "Failed to execute $run_once script."
	fi
}

if [ -z "$MDEV" ]; then
	log "No device name to mount!"
	exit 1
fi

case "$ACTION" in
	add | "")
		do_umount
		do_mount
		;;
	remove)
		do_umount
		;;
esac

exit 0
