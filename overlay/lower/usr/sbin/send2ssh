#!/bin/sh

plugin="ssh"

. /sbin/common-plugins

show_help() {
	echo "Usage: $0 [-h host] [-p port] [-u username] [-c command] [-v] [-h]
  -s host     SSH server FQDN or IP address.
  -p port     SSH server port.
  -u username SSH username.
  -c command  Commamnd to run on remote
  -v          Verbose output.
  -h          Show this help.
"
	quit_clean 0
}

# override config values with command line arguments
while getopts p:h:u:d:t:vh flag; do
	case "$flag" in
		p)
			ssh_port=$OPTARG
			;;
		h)
			ssh_host=$OPTARG
			;;
		u)
			ssh_username=$OPTARG
			;;
		d)
			ssh_path=$OPTARG
			;;
		t)
			ssh_template=$OPTARG
			;;
		v)
			verbose="true"
			;;
		h | *)
			show_help
			;;
	esac
done

if [ "false" = "$ssh_enabled" ]; then
	log "Sending to SSH is disabled."
	quit_clean 10
fi

# validate mandatory values
if [ -z "$ssh_host" ]; then
	log "SSH host not found"
	quit_clean 11
fi

if [ -z "$ssh_port" ]; then
	log "SSH port not found"
	quit_clean 12
fi

if [ -z "$ssh_cmd" ]; then
	log "SSH command not found"
	quit_clean 13
fi

command="ssh"
command="$command -p $ssh_port"
[ -n "$ssh_username" ] && command="${command} ${ssh_username}@"
command="${command}${ssh_host}"
command="${command} ${ssh_cmd}"

log "$command"
eval "$command" >> "$LOG_FILE" 2>&1

[ "true" = "$verbose" ] && cat "$LOG_FILE"

quit_clean 0
