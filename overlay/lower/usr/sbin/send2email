#!/bin/sh

plugin="email"

. /sbin/common-plugins

show_help() {
	echo "Usage: $0 [-f address] [-t address] [-s subject] [-b body] [-v] [-h]
  -f address  Sender's email address
  -t address  Recipient's email address
  -s subject  Subject line.
  -b body     Letter body.
  -v          Verbose output.
  -h          Show this help.
"
	quit_clean 0
}

# override config values with command line arguments
while getopts b:f:s:t:vh flag; do
	case "$flag" in
		b)
			email_body=$OPTARG
			;;
		f)
			email_from_address=$OPTARG
			;;
		s)
			email_subject=$OPTARG
			;;
		t)
			email_to_address=$OPTARG
			;;
		v)
			verbose="true"
			;;
		h | *)
			show_help
			;;
	esac
done

if [ "false" = "$email_enabled" ]; then
	log "Sending to email is disabled."
	quit_clean 10
fi

# validate mandatory values
if [ -z "$email_smtp_host" ]; then
	log "SMTP host not found in config"
	quit_clean 11
fi

if [ -z "$email_smtp_port" ]; then
	log "SMTP port not found in config"
	quit_clean 12
fi

if [ -z "$email_from_address" ]; then
	log "Sender's email address not found"
	quit_clean 13
fi

if [ -z "$email_to_address" ]; then
	log "Recipient's email address not found"
	quit_clean 14
fi

# assign default values if not set
#[ -z "$email_from_name" ] && email_from_name="Thingino Camera"
#[ -z "$email_to_name" ] && email_to_name="Thingino Camera Admin"
#[ -z "$email_subject" ] && email_subject="Snapshot from Thingino Camera"

command="curl --silent --verbose"
command="$command --connect-timeout $curl_timeout"
command="$command --max-time $curl_timeout"

if [ "true" = "$email_smtp_use_ssl" ]; then
	command="$command --ssl --url smtps://"
else
	command="$command --url smtp://"
fi
command="${command}${email_smtp_host}:${email_smtp_port}"

command="$command --mail-from $email_from_address"
command="$command --mail-rcpt $email_to_address"
command="$command --user '${email_smtp_username}:${email_smtp_password}'"

if [ "true" = "$email_attach_snapshot" ]; then
	snapshot=/tmp/snapshot.jpg
	if [ ! -f "$snapshot" ]; then
		log "Cannot find a snapshot"
		quit_clean 3
	fi

	attachment=$(mktemp -u /tmp/snapshot-XXXXXX).jpg
	delete_tempfile="true"
	cp $snapshot $attachment

	email_body="$(date -R)"
	command="$command -H 'Subject: $email_subject'"
	command="$command -H 'From: "$email_from_name" <$email_from_address>'"
	command="$command -H 'To: "$email_to_name" <$email_to_address>'"
	command="$command -F '=(;type=multipart/mixed'"
	command="$command -F '=${email_body};type=text/plain'"
	command="$command -F 'file=@${attachment};type=image/jpeg;encoder=base64'"
	command="$command -F '=)'"
else
	email_file="/tmp/email.$$.txt"
	{
		echo "From: $email_from_name <$email_from_address>"
		echo "To: $email_to_name <$email_to_address>"
		echo "Subject: $email_subject"
		echo "Date: $(date -R)"
		echo ""
		echo "$email_body"
	} >> $email_file
	command="$command --upload-file $email_file"
fi

log "$command"
eval "$command" >> "$LOG_FILE" 2>&1

[ "true" = "$delete_tempfile" ]  && [ -f "$attachment" ] && rm "$attachment"
[ "true" = "$verbose" ] && cat "$LOG_FILE"

[ -f "$email_file" ] && rm -f $email_file

quit_clean 0

