#!/bin/sh

plugin="email"

. /sbin/common-plugins

show_help() {
	echo "Usage: $0 [-f address] [-t address] [-s subject] [-b body] [-v] [-h]
  -f address  Sender's email address
  -t address  Recipient's email address
  -s subject  Subject line.
  -b body     Letter body.
  -k          Ignore SSL certificate validity.
  -v          Verbose output.
  -h          Show this help.
"
	quit_clean 0
}

# override config values with command line arguments
while getopts b:f:ks:t:vh flag; do
	case "$flag" in
		b) email_body=$OPTARG ;;
		f) email_from_address=$OPTARG ;;
		k) email_insecure_ssl="true" ;;
		s) email_subject=$OPTARG ;;
		t) email_to_address=$OPTARG ;;
		v) verbose="true" ;;
		h | *) show_help ;;
	esac
done

[ "false" = "$email_enabled" ] && die "Sending to email is disabled."
# validate mandatory values
[ -z "$email_smtp_host" ] && die "SMTP host not found in config"
[ -z "$email_smtp_port" ] && die "SMTP port not found in config"
[ -z "$email_from_address" ] && die "Sender's email address not found"
[ -z "$email_to_address" ] && die "Recipient's email address not found"

# assign default values if not set
[ -z "$email_from_name" ] && email_from_name="Thingino Camera"
[ -z "$email_to_name" ] && email_to_name="Thingino Camera Admin"
[ -z "$email_subject" ] && email_subject="Snapshot from Thingino Camera"

# TODO: email address format validation

build_cmd "$CURL --mail-from $email_from_address --mail-rcpt $email_to_address"
[ "true" = "$verbose" ] && build_cmd "--verbose"

[ -n "$email_smtp_username" ] && [ -n "$email_smtp_password" ] && \
	build_cmd "--user '$email_smtp_username:$email_smtp_password'"
if [ "true" = "$email_smtp_use_ssl" ]; then
	build_cmd "--url smtps://$email_smtp_host:$email_smtp_port --ssl"
	[ "true" = "$email_insecure_ssl" ] && build_cmd "--insecure"
else
	build_cmd "--url smtp://$email_smtp_host:$email_smtp_port"
fi

if [ "true" = "$email_attach_snapshot" ]; then
	attachment=$(mktemp -u /tmp/snapshot-XXXXXX).jpg
	clone_snapshot $attachment

	email_body="$(date -R)"
	build_cmd "-H 'Subject: $email_subject'"
	build_cmd "-H 'From: \"$email_from_name\" <$email_from_address>'"
	build_cmd "-H 'To: \"$email_to_name\" <$email_to_address>'"
	build_cmd "-F '=(;type=multipart/mixed'"
	build_cmd "-F '=$email_body;type=text/plain'"
	build_cmd "-F 'file=@$attachment;type=image/jpeg;encoder=base64'"
	build_cmd "-F '=)'"
else
	email_file="/tmp/email.$$.txt"
	{
		echo "From: $email_from_name <$email_from_address>"
		echo "To: $email_to_name <$email_to_address>"
		echo "Subject: $email_subject"
		echo "Date: $(date -R)"
		echo ""
		echo "$email_body"
	} >> $email_file
	build_cmd "--upload-file $email_file"
fi

log_and_run "$command"

[ "true" = "$delete_tempfile" ] && [ -f "$attachment" ] && rm "$attachment"

[ -f "$email_file" ] && rm -f $email_file

quit_clean 0
