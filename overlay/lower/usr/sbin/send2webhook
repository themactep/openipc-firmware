#!/bin/sh

plugin="webhook"

. /sbin/common-plugins

show_help() {
	echo "Usage: $0 [-u url] [-v] [-h]
  -u url      Webhook URL.
  -v          Verbose output.
  -h          Show this help.
"
	quit_clean 0
}

# override config values with command line arguments
while getopts u:vh flag; do
	case "$flag" in
		u)
			webhook_url=$OPTARG
			;;
		v)
			verbose="true"
			;;
		h | *)
			show_help
			;;
	esac
done

if [ "false" = "$webhook_enabled" ]; then
	log "Sending to webhook is disabled."
	quit_clean 10
fi

# validate mandatory values
if [ -z "$webhook_url" ]; then
	log "Webhook URL not found"
	quit_clean 11
fi

command="curl --verbose"
command="$command --connect-timeout $curl_timeout"
command="$command --max-time $curl_timeout -X POST"

if [ "true" = "$webhook_attach_snapshot" ]; then
	snapshot=/tmp/snapshot.jpg
	[ ! -f "$snapshot" ] && log "Cannot find a snapshot" && quit_clean 3

	attachment=$(mktemp -u /tmp/snapshot-XXXXXX).jpg
	delete_tempfile="true"
	cp $snapshot $attachment

	command="$command -F 'image=@$attachment'"
fi

# SOCK5 proxy, if needed
if [ "true" = "$webhook_socks5_enabled" ]; then
	. /etc/webui/socks5.conf
	command="$command --socks5-hostname ${socks5_host}:$socks5_port"
	command="$command --proxy-user ${socks5_login}:$socks5_password"
fi

command="$command --url $webhook_url"

log "$command"
eval "$command" >> "$LOG_FILE" 2>&1

[ "true" = "$delete_tempfile" ]  && [ -f "$attachment" ] && rm "$attachment"
[ "true" = "$verbose" ] && cat "$LOG_FILE"

quit_clean 0
