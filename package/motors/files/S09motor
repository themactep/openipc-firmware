#!/bin/sh

. /etc/init.d/rc.common

set_motor_phases() {
	[ "$(echo $2 | wc -w)" -lt 4 ] && die "Missing phase for ${1}motor"

	local i=1
	for gpio in $2; do
		eval "${1}st${i}=$gpio"
		i=$((i + 1))
	done
}

home_motors() {
	if [ "true" = "$(get disable_homing)" ]; then
		warn "Homing disabled"
		return
	fi

	local x=$((motor_maxstep_h / 2))
	local y=$((motor_maxstep_v / 2))
	local motor_pos_0=$(get motor_pos_0)
	if [ -n "$motor_pos_0" ]; then
		x=$(echo $motor_pos_0 | cut -d, -f1)
		y=$(echo $motor_pos_0 | cut -d, -f2)
	fi

	info "Home and position motors to $x,$y"
	motors -r -d h -x $x -y $y > /dev/null 2>&1 &
}

start() {
	starting_batch

	motors_app=$(which motors)
	gpio_motor_h=$(fw_printenv -n gpio_motor_h)
	gpio_motor_v=$(fw_printenv -n gpio_motor_v)
	motor_maxstep_h=$(fw_printenv -n motor_maxstep_h)
	motor_maxstep_v=$(fw_printenv -n motor_maxstep_v)

	# Check if motors are supported
	[ -z "$motors_app"      ] && die " No motors app found"
	[ -z "$gpio_motor_h"    ] && die " Pan motor GPIO pins are not set"
	[ -z "$gpio_motor_v"    ] && die " Tilt motor GPIO pins are not set"
	[ -z "$motor_maxstep_h" ] && die " Pan motor Steps are not set"
	[ -z "$motor_maxstep_v" ] && die " Tilt motor Steps are not set"

	if grep -qE "^motor" /proc/modules; then
		info "Motors module already loaded."
	else
		info "Set GPIO per motor phase"
		set_motor_phases "h" "$gpio_motor_h"
		set_motor_phases "v" "$gpio_motor_v"

		info "Load module with parameters"
		modprobe motor hmaxstep=$motor_maxstep_h vmaxstep=$motor_maxstep_v \
			hst1=$hst1 hst2=$hst2 hst3=$hst3 hst4=$hst4 \
			vst1=$vst1 vst2=$vst2 vst3=$vst3 vst4=$vst4 \
			|| die "Failed to load motor module"
	fi

	home_motors
}

stop() {
	stopping

	# FIXME: motor.ko crashes on upload
	# rmmod motor || die "Failed to unload motor module."
	ok
}

case "$1" in
	start | stop)
		$1
		;;
	restart | reload)
		stop
		sleep 1
		start
		;;
	*)
		die "Usage: $0 {start|stop|restart|reload}"
		;;
esac

exit 0
